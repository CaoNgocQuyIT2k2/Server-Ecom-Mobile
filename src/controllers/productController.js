const Product = require("../models/Product");
const SaleProduct = require("../models/SaleProduct");
const Category = require("../models/Category");

// L·∫•y danh s√°ch t·∫•t c·∫£ s·∫£n ph·∫©m
exports.getProducts = async (req, res) => {
    try {
        const products = await Product.find();
        res.json(products);
    } catch (error) {
        res.status(500).json({ error: "L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m" });
    }
};

// L·∫•y danh s√°ch s·∫£n ph·∫©m gi·∫£m gi√° t·ª´ saleProducts
exports.getSaleProducts = async (req, res) => {
    try {
        const saleProducts = await SaleProduct.find();
        console.log("Sale Products t·ª´ DB:", saleProducts);
        res.json(saleProducts); // Tr·∫£ v·ªÅ danh s√°ch m√† kh√¥ng c√≥ key "saleProducts"
    } catch (error) {
        res.status(500).json({ error: "L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m gi·∫£m gi√°" });
    }
};


// L·∫•y danh s√°ch danh m·ª•c
exports.getCategories = async (req, res) => {
    try {
        const categories = await Category.find();
        res.json(categories);
    } catch (error) {
        res.status(500).json({ error: "L·ªói khi l·∫•y danh m·ª•c" });
    }
};


// API l·∫•y 10 s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t
exports.getTop10Sold = async (req, res) => {
    try {
      const topSoldProducts = await Product.find()
        .sort({ soldCount: -1 }) // S·∫Øp x·∫øp gi·∫£m d·∫ßn theo soldCount
        .limit(10); // Gi·ªõi h·∫°n 10 s·∫£n ph·∫©m
  
      res.status(200).json(topSoldProducts);
    } catch (error) {
      res.status(500).json({ message: 'L·ªói khi l·∫•y s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t', error });
    }
  };

// API t√¨m ki·∫øm s·∫£n ph·∫©m theo title ho·∫∑c category
exports.searchProducts = async (req, res) => {
    try {
        const { key } = req.query;
        if (!key) {
            return res.status(400).json({ message: "Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm" });
        }
        // T√¨m ki·∫øm trong title, category, description, v√† brand
        const products = await Product.find({
            $or: [
                { title: { $regex: key, $options: "i" } },
                { "category.name": { $regex: key, $options: "i" } },
                { description: { $regex: key, $options: "i" } },
            ]
        });

        res.status(200).json(products);
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi t√¨m ki·∫øm s·∫£n ph·∫©m", error });
    }
};

//  API l·∫•y s·ªë sao trung b√¨nh c·ªßa m·ªôt s·∫£n ph·∫©m
exports.getProductRating = async (req, res) => {
    try {
        const { id } = req.params;

        // T√¨m s·∫£n ph·∫©m theo id
        const product = await Product.findOne({ id: parseInt(id) }).lean();

        if (!product) {
            return res.status(404).json({ message: "S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i" });
        }

        // Tr·∫£ v·ªÅ s·ªë sao trung b√¨nh ƒë√£ l∆∞u trong DB
        res.status(200).json({ 
            productId: product.id,
            title: product.title,
            averageRating: product.ratings?.average || 0,  // ‚úÖ L·∫•y tr·ª±c ti·∫øp t·ª´ DB
            totalRatings: product.ratings?.totalRatings || 0
        });

    } catch (error) {
        console.error("üî• Error fetching rating:", error);
        res.status(500).json({ message: "L·ªói khi l·∫•y ƒë√°nh gi√° s·∫£n ph·∫©m", error });
    }
};


// API l·∫•y th√¥ng tin s·∫£n ph·∫©m theo ID
exports.getProductById = async (req, res) => {
    try {
        const { id } = req.params;
        
        // T√¨m s·∫£n ph·∫©m theo id
        const product = await Product.findOne({ id });

        if (!product) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m" });
        }

        res.status(200).json(product);
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi l·∫•y s·∫£n ph·∫©m", error });
    }
};